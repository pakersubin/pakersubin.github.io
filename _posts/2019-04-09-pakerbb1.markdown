---
layout: post
title:  "ELK - Elasticsearch란 무엇인가? - 1"
date:   2019-04-12 13:44:40
categories: update
---
<img src="{{ site.baseurl }}/images/elastic.jpg">

안녕하세요 처음 글을 작성하는데 많이 부족하지만 조금씩 정리할려는 중입니다!

먼저 ELK에 대해서 간략히 소개 후 Elasticsearch에 대해서 소개하려고 합니다.

ELK는 분석 및 저장 기능을 담당하는 ElasticSearch, 수집 기능을 하는 Logstash, 이를 시각화하는 도구인 Kibana의 앞글자만 딴 단어이다. ELK는 접근성과 용이성이 좋아 최근 가장 핫한 Log 및 데이터 분석 도구입니다.

이미 많은 분야에서 사용중이며 전 세계적으로 수많은 고객들과 다양한 사례들을 보유하고 있습니다.

국내에서는 삼성 SDS , POSCO , NAVER , 쿠팡등 다양한 기업에서 로깅 및 검색엔진 또는 chatbot으로 활용중입니다.

Elasticsearch는 공식 홈페이지의 Docs도 매우 잘 되어있어서 자료를 찾아보기에는 수월한것 같습니다.
-https://www.elastic.co/kr/

공식적으로 Elasticsearch는 A Distributed RESTful Search Engine 라고 설명하고 있습니다. 분산환경에서 RESTful API를 지원하는 검색 엔진이며 ,
루씬을 기반으로한 검색엔진을 사용하고, 대용량 데이터를 처리하는데 적합하며 준실시간으로 데이터를 저장하고 검색, 분석할 수 있습니다.

* 사용목적
    - 대용량 자료에서의 검색 시간이 중요한 시스템 개발 시 사용
    - 데이터를 저장하고 분석하기 위해 NoSql로서 사용
    	+ 3단계
            = 4단계
* 특징
    - 기존의 관계형 데이터 베이스 구조와 다른 JSON Documen구조를 가지고 있다. 엄격한 데이터 구조를 요구하지 않기 때문에 어떠한 JSON Documen도 저장이 가능하다.
    - 집계기능을 활용한 데이터 분석이 가능하다
    - 다양한 클라이언트 라이브러리를 지원한다
    - REST API 지원
    - 분산시스템으로 인해 높은 확장성과 고가용성을 가질 수 있다.
        + 노드 확장을 통한 수평적 확장이 용이하다 ( 같은 네트워크 환경 아래서 추가 구성없이 새로운 노드를 실행만 하면 수평적 확장이 가능)
    - 하나의 elasticsearch 서버에 여러 인덱스를 저장하고, 여러 인덱스의 데이터를 하나의 쿼리로 검색할 수 있다.
    - Near real time
    - 데이터를 저장하고 분석하기 위해 NoSql로서 사용
        + 전문 텍스트 검색은 데이터베이스에서 사용할 수 있는 모든 도큐먼트에 대해 어떤 조건이라도 검색할 수 있다는것. 따라서 모든 도큐먼트의 전체 내용을 미리 분석하고 저장.
        + 불규칙한 구조를 가지는 어떠한 텍스트라도 색인을 생성한 후 특정 검색어로 모든 도큐먼트를 검색할 수 있다. 

관계형 데이터베이스는 행 , 열 , 테이블 , 스키마와 같은 개념을 가지고 있습니다. 하지만 Elasticsearch는 document 지향 저장소로 JSON 도큐먼트는 Elasticsearch에서 일급 객체로 취급을 합니다.
이러한 JSON 도큐먼트는 다양한 타입과 인덱스로 구성이 된다. 지금부터는 Elasticsearch 핵심 개념에 대해서 소개하겠습니다.
(* 다양한 타입과 인덱스로 구성이 된다고 했지만 6.x 버전 이후로는 하나의 Index 하나의 Type입니다.)

* 용어 정리
    - <img src="{{ site.baseurl }}/images/stru.jpg">
    - <img src="{{ site.baseurl }}/images/ela_rdb.png">
    - 인덱스 (INDEX)
        + 인덱스는 단일 타입의 도큐먼트를 저장하고 관리하는 컨테이너입니다. 인덱스는 여러개의 타입을 가질 수 있고, 인덱스는 타입을 포함한 논리적 컨테이너 입니다.
        + RDB의 데이터베이스와 유사합니다
        + 엘라스틱 서치 6.0 이전 버전에서는 단일 인덱스에 여러개의 타입이 포함 될 수 있지만 6.0 이후에는 단일 인덱스에 단일 타입만 가질 수 있습니다.
    - 타입 (Type)
        + 공통 필드 집합을 가진 도큐먼트의 집합이며 , 논리적으로 인덱스 내에 같은 도큐먼트 종류를 그룹화하고 구성하는 역할을 합니다
        + RDB의 테이블과 유사합니다.
    - Document
        + JSON 도큐먼트는 일급 객체로 취급이 됩니다. 다중 필드로 구성된 도큐먼트는 엘라스틱에서 저장된 정보의 기본 단위입니다.
        + 테이블의 ROW와 유사하며 JSON 문서 형태 (Key, Value)
    - Filed
        + 엘라스틱 서치의 문서는 JSON입니다. JSON의 프로퍼티를 엘라스틱서치에서 필드라 부르며 RDB의 컬럼과 유사.
    - Mapping
        + RDB의 스키마와 유사
    - Node
        + 엘라스틱서치를 다운받고 실행을 했을떄 , 이를 엘라스틱서치 단일 노드라고 부른다. 엘라스틱 서치 단일 노드는 클러스터의 부분집합이 될 수 있는 단일 서버의 역할을 한다.
        + 노드는 엘라스틱 서치에서 지원하는 색인,검색 및 기타 연산 작업을 수행한다.
    - Cluster
        + 단일 혹은 다중의 인덱스를 호스팅하며 검색 색인 집계와 같은 연산을 제공
        + 클러스터는 하나 이상의 노드로 구성되며 모든 엘라스틱 서치 노드는 항상 클러스터의 부분 집합이다.
        + 클러스터는 여러노드로 구성될 수 있으며, 하나 이상의 인덱스를 호스팅 할 수 있고, 인덱스는 도규먼트의 연관 타입에 대한 논리적 그룹
        + 다중 인덱스를 생성 할 수 있는 물리 계층의 서비스를 구성
    - 샤드
        + 단일 인덱스는 하나 이상의 타입을 갖는 여러 도큐먼트를 포함한다.
        + 샤드는 클러스터에서 인덱스를 분배하고 단일 인덱스의 도큐먼트를 여러 노드로 분할을 한다.
        + 클러스터에 위치한 여러 노드의 저장소 활용을 돕는다.
        + 클러스터에 위치한 여러 노드의 처리 능력 활용을 돕는다.
        + 인덱스의 독을 샤드가 나눠서 가진다
    - 레플리카
        + 하나의 노드에서 장애가 발생시 노드에 위치한 샤드가 손실이 된다. 하지만 분산 시스템에서는 하드웨어의 장애가 있어도 실행이 되야한다.
        + 엘라스틱 서치에서는 복제본을 통해 문제를 해결한다.
        + 인덱스의 각 샤드는 0개이상의 레플리카를 가지고 있다.
        + 샤드는 노드에 자신과 같은 복제본은 가질 수 없다.
        + 노드에 장애가 발생해서 데이터 손실시 복제본이 주 샤드로 승격이 된다.
        + 복제본은 검색,쿼리,집계와 같은 연산을 할 수 있다.
